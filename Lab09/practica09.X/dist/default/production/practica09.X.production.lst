

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 03 00:02:02 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.35
    24                           ; Generated 05/05/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K50 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _ANSELA	set	3931
    59  0000                     _ANSELD	set	3934
    60  0000                     _RCONbits	set	4048
    61  0000                     _OSCCON	set	4051
    62  0000                     _T0CON	set	4053
    63  0000                     _TMR0L	set	4054
    64  0000                     _INTCON2bits	set	4081
    65  0000                     _INTCONbits	set	4082
    66  0000                     _PORTA	set	3968
    67  0000                     _PORTD	set	3971
    68  0000                     _TRISD	set	3989
    69  0000                     _LATD	set	3980
    70  0000                     _TRISA	set	3986
    71  0000                     _ANSELB	set	3932
    72  0000                     _TRISBbits	set	3987
    73  0000                     _PORTBbits	set	3969
    74  0000                     _TMR0H	set	4055
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  0000F6                     __pcinit:
    80                           	callstack 0
    81  0000F6                     start_initialization:
    82                           	callstack 0
    83  0000F6                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (1 bytes)
    87  0000F6  6A01               	clrf	__pbssCOMRAM& (0+255),c
    88  0000F8                     end_of_initialization:
    89                           	callstack 0
    90  0000F8                     __end_of__initialization:
    91                           	callstack 0
    92  0000F8  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    93  0000FA  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    94  0000FC  0100               	movlb	0
    95  0000FE  EF24  F000         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMRAM
    98  000001                     __pbssCOMRAM:
    99                           	callstack 0
   100  000001                     _cuenta:
   101                           	callstack 0
   102  000001                     	ds	1
   103                           
   104                           	psect	cstackCOMRAM
   105  000002                     __pcstackCOMRAM:
   106                           	callstack 0
   107  000002                     ??_high_isr:
   108                           
   109                           ; 1 bytes @ 0x0
   110  000002                     	ds	1
   111  000003                     
   112                           ; 1 bytes @ 0x1
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 21 in file "main.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   132 ;;      Params:         0       0       0       0       0       0       0       0       0
   133 ;;      Locals:         0       0       0       0       0       0       0       0       0
   134 ;;      Temps:          0       0       0       0       0       0       0       0       0
   135 ;;      Totals:         0       0       0       0       0       0       0       0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called: 3
   138 ;; This function calls:
   139 ;;		_init
   140 ;;		_state1
   141 ;;		_state2
   142 ;;		_state3
   143 ;;		_state4
   144 ;;		_state5
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151  000048                     __ptext0:
   152                           	callstack 0
   153  000048                     _main:
   154                           	callstack 28
   155  000048                     
   156                           ;main.c: 22:     init();
   157  000048  EC3F  F000         	call	_init	;wreg free
   158  00004C                     l57:
   159                           
   160                           ;main.c: 24:         state1();
   161  00004C  EC72  F000         	call	_state1	;wreg free
   162                           
   163                           ;main.c: 25:         state2();
   164  000050  EC8B  F000         	call	_state2	;wreg free
   165                           
   166                           ;main.c: 26:         while (cuenta != 0){
   167  000054  EF2F  F000         	goto	l824
   168  000058                     l820:
   169                           
   170                           ;main.c: 27:             state3();
   171  000058  EC86  F000         	call	_state3	;wreg free
   172  00005C                     
   173                           ;main.c: 28:             cuenta--;
   174  00005C  0601               	decf	_cuenta^0,f,c
   175  00005E                     l824:
   176                           
   177                           ;main.c: 26:         while (cuenta != 0){
   178  00005E  5001               	movf	_cuenta^0,w,c
   179  000060  A4D8               	btfss	status,2,c
   180  000062  EF35  F000         	goto	u21
   181  000066  EF37  F000         	goto	u20
   182  00006A                     u21:
   183  00006A  EF2C  F000         	goto	l820
   184  00006E                     u20:
   185  00006E                     
   186                           ;main.c: 30:         state4();
   187  00006E  EC69  F000         	call	_state4	;wreg free
   188                           
   189                           ;main.c: 31:         state5();
   190  000072  EC81  F000         	call	_state5	;wreg free
   191  000076  EF26  F000         	goto	l57
   192  00007A  EF22  F000         	goto	start
   193  00007E                     __end_of_main:
   194                           	callstack 0
   195                           
   196 ;; *************** function _state5 *****************
   197 ;; Defined at:
   198 ;;		line 85 in file "main.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0
   214 ;;      Temps:          0       0       0       0       0       0       0       0       0
   215 ;;      Totals:         0       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels used: 1
   218 ;; Hardware stack levels required when called: 2
   219 ;; This function calls:
   220 ;;		_delay1S
   221 ;; This function is called by:
   222 ;;		_main
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text1
   227  000102                     __ptext1:
   228                           	callstack 0
   229  000102                     _state5:
   230                           	callstack 28
   231  000102                     
   232                           ;main.c: 86:     LATD = 0x21;
   233  000102  0E21               	movlw	33
   234  000104  6E8C               	movwf	140,c	;volatile
   235  000106                     
   236                           ;main.c: 87:     delay1S();
   237  000106  EC58  F000         	call	_delay1S	;wreg free
   238  00010A  0012               	return		;funcret
   239  00010C                     __end_of_state5:
   240                           	callstack 0
   241                           
   242 ;; *************** function _state4 *****************
   243 ;; Defined at:
   244 ;;		line 78 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   258 ;;      Params:         0       0       0       0       0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels used: 1
   264 ;; Hardware stack levels required when called: 2
   265 ;; This function calls:
   266 ;;		_delay1S
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text2
   273  0000D2                     __ptext2:
   274                           	callstack 0
   275  0000D2                     _state4:
   276                           	callstack 28
   277  0000D2                     
   278                           ;main.c: 79:     LATD = 0x41;
   279  0000D2  0E41               	movlw	65
   280  0000D4  6E8C               	movwf	140,c	;volatile
   281  0000D6                     
   282                           ;main.c: 80:     delay1S();
   283  0000D6  EC58  F000         	call	_delay1S	;wreg free
   284  0000DA                     
   285                           ;main.c: 81:     delay1S();
   286  0000DA  EC58  F000         	call	_delay1S	;wreg free
   287  0000DE                     
   288                           ;main.c: 82:     delay1S();
   289  0000DE  EC58  F000         	call	_delay1S	;wreg free
   290  0000E2  0012               	return		;funcret
   291  0000E4                     __end_of_state4:
   292                           	callstack 0
   293                           
   294 ;; *************** function _state3 *****************
   295 ;; Defined at:
   296 ;;		line 73 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   310 ;;      Params:         0       0       0       0       0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 2
   317 ;; This function calls:
   318 ;;		_delay1S
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text3
   325  00010C                     __ptext3:
   326                           	callstack 0
   327  00010C                     _state3:
   328                           	callstack 28
   329  00010C                     
   330                           ;main.c: 74:     LATD = 0x99;
   331  00010C  0E99               	movlw	153
   332  00010E  6E8C               	movwf	140,c	;volatile
   333  000110                     
   334                           ;main.c: 75:     delay1S();
   335  000110  EC58  F000         	call	_delay1S	;wreg free
   336  000114  0012               	return		;funcret
   337  000116                     __end_of_state3:
   338                           	callstack 0
   339                           
   340 ;; *************** function _state2 *****************
   341 ;; Defined at:
   342 ;;		line 68 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   356 ;;      Params:         0       0       0       0       0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; Hardware stack levels required when called: 2
   363 ;; This function calls:
   364 ;;		_delay1S
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text4
   371  000116                     __ptext4:
   372                           	callstack 0
   373  000116                     _state2:
   374                           	callstack 28
   375  000116                     
   376                           ;main.c: 69:     LATD = 0x12;
   377  000116  0E12               	movlw	18
   378  000118  6E8C               	movwf	140,c	;volatile
   379  00011A                     
   380                           ;main.c: 70:     delay1S();
   381  00011A  EC58  F000         	call	_delay1S	;wreg free
   382  00011E  0012               	return		;funcret
   383  000120                     __end_of_state2:
   384                           	callstack 0
   385                           
   386 ;; *************** function _state1 *****************
   387 ;; Defined at:
   388 ;;		line 61 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         0       0       0       0       0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; Hardware stack levels required when called: 2
   409 ;; This function calls:
   410 ;;		_delay1S
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text5
   417  0000E4                     __ptext5:
   418                           	callstack 0
   419  0000E4                     _state1:
   420                           	callstack 28
   421  0000E4                     
   422                           ;main.c: 62:     LATD = 0x14;
   423  0000E4  0E14               	movlw	20
   424  0000E6  6E8C               	movwf	140,c	;volatile
   425  0000E8                     
   426                           ;main.c: 63:     delay1S();
   427  0000E8  EC58  F000         	call	_delay1S	;wreg free
   428  0000EC                     
   429                           ;main.c: 64:     delay1S();
   430  0000EC  EC58  F000         	call	_delay1S	;wreg free
   431  0000F0                     
   432                           ;main.c: 65:     delay1S();
   433  0000F0  EC58  F000         	call	_delay1S	;wreg free
   434  0000F4  0012               	return		;funcret
   435  0000F6                     __end_of_state1:
   436                           	callstack 0
   437                           
   438 ;; *************** function _delay1S *****************
   439 ;; Defined at:
   440 ;;		line 90 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   454 ;;      Params:         0       0       0       0       0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 1
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		_state1
   465 ;;		_state2
   466 ;;		_state3
   467 ;;		_state4
   468 ;;		_state5
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text6
   473  0000B0                     __ptext6:
   474                           	callstack 0
   475  0000B0                     _delay1S:
   476                           	callstack 28
   477  0000B0                     
   478                           ;main.c: 91:     TMR0L = 0xEE;
   479  0000B0  0EEE               	movlw	238
   480  0000B2  6ED6               	movwf	214,c	;volatile
   481                           
   482                           ;main.c: 92:     TMR0H = 0x85;
   483  0000B4  0E85               	movlw	133
   484  0000B6  6ED7               	movwf	215,c	;volatile
   485                           
   486                           ;main.c: 93:     T0CON = 0b10000101;
   487  0000B8  0E85               	movlw	133
   488  0000BA  6ED5               	movwf	213,c	;volatile
   489  0000BC                     l84:
   490  0000BC  A4F2               	btfss	242,2,c	;volatile
   491  0000BE  EF63  F000         	goto	u11
   492  0000C2  EF65  F000         	goto	u10
   493  0000C6                     u11:
   494  0000C6  EF5E  F000         	goto	l84
   495  0000CA                     u10:
   496  0000CA                     
   497                           ;main.c: 95:     INTCONbits.TMR0IF = 0;
   498  0000CA  94F2               	bcf	242,2,c	;volatile
   499  0000CC                     
   500                           ;main.c: 96:     T0CON = 0;
   501  0000CC  0E00               	movlw	0
   502  0000CE  6ED5               	movwf	213,c	;volatile
   503  0000D0  0012               	return		;funcret
   504  0000D2                     __end_of_delay1S:
   505                           	callstack 0
   506                           
   507 ;; *************** function _init *****************
   508 ;; Defined at:
   509 ;;		line 36 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text7
   538  00007E                     __ptext7:
   539                           	callstack 0
   540  00007E                     _init:
   541                           	callstack 29
   542  00007E                     
   543                           ;main.c: 38:     OSCCON = 0b01100100;
   544  00007E  0E64               	movlw	100
   545  000080  6ED3               	movwf	211,c	;volatile
   546  000082                     
   547                           ;main.c: 41:     RCONbits.IPEN = 1;
   548  000082  8ED0               	bsf	208,7,c	;volatile
   549  000084                     
   550                           ;main.c: 42:     INTCONbits.GIEH = 1;
   551  000084  8EF2               	bsf	242,7,c	;volatile
   552  000086                     
   553                           ;main.c: 43:     INTCONbits.GIEL = 1;
   554  000086  8CF2               	bsf	242,6,c	;volatile
   555  000088                     
   556                           ;main.c: 45:     INTCON2bits.INTEDG0 = 0;
   557  000088  9CF1               	bcf	241,6,c	;volatile
   558  00008A                     
   559                           ;main.c: 46:     INTCONbits.INT0IE = 1;
   560  00008A  88F2               	bsf	242,4,c	;volatile
   561  00008C                     
   562                           ;main.c: 47:     INTCONbits.INT0IF = 0;
   563  00008C  92F2               	bcf	242,1,c	;volatile
   564                           
   565                           ;main.c: 50:     ANSELD = digital;
   566  00008E  0E00               	movlw	0
   567  000090  010F               	movlb	15	; () banked
   568  000092  6F5E               	movwf	94,b	;volatile
   569                           
   570                           ;main.c: 51:     TRISD = output;
   571  000094  0E00               	movlw	0
   572  000096  6E95               	movwf	149,c	;volatile
   573                           
   574                           ;main.c: 52:     PORTD = 0;
   575  000098  0E00               	movlw	0
   576  00009A  6E83               	movwf	131,c	;volatile
   577                           
   578                           ;main.c: 53:     ANSELA = digital;
   579  00009C  0E00               	movlw	0
   580  00009E  6F5B               	movwf	91,b	;volatile
   581                           
   582                           ;main.c: 54:     TRISA = output;
   583  0000A0  0E00               	movlw	0
   584  0000A2  6E92               	movwf	146,c	;volatile
   585                           
   586                           ;main.c: 55:     PORTA = 0;
   587  0000A4  0E00               	movlw	0
   588  0000A6  6E80               	movwf	128,c	;volatile
   589                           
   590                           ;main.c: 56:     ANSELB = digital;
   591  0000A8  0E00               	movlw	0
   592  0000AA  6F5C               	movwf	92,b	;volatile
   593  0000AC                     
   594                           ; BSR set to: 15
   595                           ;main.c: 57:     TRISBbits.TRISB0 = 1;
   596  0000AC  8093               	bsf	147,0,c	;volatile
   597  0000AE                     
   598                           ; BSR set to: 15
   599  0000AE  0012               	return		;funcret
   600  0000B0                     __end_of_init:
   601                           	callstack 0
   602                           
   603 ;; *************** function _high_isr *****************
   604 ;; Defined at:
   605 ;;		line 101 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0       0       0       0       0
   622 ;;      Totals:         1       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        1 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		Interrupt level 2
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	intcode
   633  000008                     __pintcode:
   634                           	callstack 0
   635  000008                     _high_isr:
   636                           	callstack 28
   637                           
   638                           ; BSR set to: 15
   639                           ;incstack = 0
   640  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   641  00000A                     
   642                           ;main.c: 102:     _delay((unsigned long)((30)*(8000000/4000.0)));
   643  00000A  0E4E               	movlw	78
   644  00000C  6E02               	movwf	??_high_isr^0,c
   645  00000E  0EEB               	movlw	235
   646  000010                     i2u5_47:
   647  000010  2EE8               	decfsz	wreg,f,c
   648  000012  D7FE               	bra	i2u5_47
   649  000014  2E02               	decfsz	??_high_isr^0,f,c
   650  000016  D7FC               	bra	i2u5_47
   651  000018  F000               	nop	
   652  00001A                     
   653                           ;main.c: 103:     if (PORTBbits.RB0 == 0){
   654  00001A  B081               	btfsc	129,0,c	;volatile
   655  00001C  EF12  F000         	goto	i2u3_41
   656  000020  EF14  F000         	goto	i2u3_40
   657  000024                     i2u3_41:
   658  000024  EF1F  F000         	goto	i2l838
   659  000028                     i2u3_40:
   660  000028                     
   661                           ;main.c: 104:         cuenta++;
   662  000028  2A01               	incf	_cuenta^0,f,c
   663  00002A                     
   664                           ;main.c: 105:         if (cuenta > 8){
   665  00002A  0E08               	movlw	8
   666  00002C  6401               	cpfsgt	_cuenta^0,c
   667  00002E  EF1B  F000         	goto	i2u4_41
   668  000032  EF1D  F000         	goto	i2u4_40
   669  000036                     i2u4_41:
   670  000036  EF1F  F000         	goto	i2l838
   671  00003A                     i2u4_40:
   672  00003A                     
   673                           ;main.c: 106:             cuenta = 8;
   674  00003A  0E08               	movlw	8
   675  00003C  6E01               	movwf	_cuenta^0,c
   676  00003E                     i2l838:
   677                           
   678                           ;main.c: 109:     INTCONbits.INT0IF = 0;
   679  00003E  92F2               	bcf	242,1,c	;volatile
   680  000040  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   681  000042  0011               	retfie		f
   682  000044                     __end_of_high_isr:
   683                           	callstack 0
   684  0000                     
   685                           	psect	rparam
   686  0000                     
   687                           	psect	temp
   688  000003                     btemp:
   689                           	callstack 0
   690  000003                     	ds	1
   691  0000                     int$flags	set	btemp
   692  0000                     wtemp8	set	btemp+1
   693  0000                     ttemp5	set	btemp+1
   694  0000                     ttemp6	set	btemp+4
   695  0000                     ttemp7	set	btemp+8
   696                           
   697                           	psect	idloc
   698                           
   699                           ;Config register IDLOC0 @ 0x200000
   700                           ;	unspecified, using default values
   701  200000                     	org	2097152
   702  200000  FF                 	db	255
   703                           
   704                           ;Config register IDLOC1 @ 0x200001
   705                           ;	unspecified, using default values
   706  200001                     	org	2097153
   707  200001  FF                 	db	255
   708                           
   709                           ;Config register IDLOC2 @ 0x200002
   710                           ;	unspecified, using default values
   711  200002                     	org	2097154
   712  200002  FF                 	db	255
   713                           
   714                           ;Config register IDLOC3 @ 0x200003
   715                           ;	unspecified, using default values
   716  200003                     	org	2097155
   717  200003  FF                 	db	255
   718                           
   719                           ;Config register IDLOC4 @ 0x200004
   720                           ;	unspecified, using default values
   721  200004                     	org	2097156
   722  200004  FF                 	db	255
   723                           
   724                           ;Config register IDLOC5 @ 0x200005
   725                           ;	unspecified, using default values
   726  200005                     	org	2097157
   727  200005  FF                 	db	255
   728                           
   729                           ;Config register IDLOC6 @ 0x200006
   730                           ;	unspecified, using default values
   731  200006                     	org	2097158
   732  200006  FF                 	db	255
   733                           
   734                           ;Config register IDLOC7 @ 0x200007
   735                           ;	unspecified, using default values
   736  200007                     	org	2097159
   737  200007  FF                 	db	255
   738                           
   739                           	psect	config
   740                           
   741                           ;Config register CONFIG1L @ 0x300000
   742                           ;	PLL Selection
   743                           ;	PLLSEL = PLL4X, 4x clock multiplier
   744                           ;	PLL Enable Configuration bit
   745                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   746                           ;	CPU System Clock Postscaler
   747                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   748                           ;	Low Speed USB mode with 48 MHz system clock
   749                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   750  300000                     	org	3145728
   751  300000  00                 	db	0
   752                           
   753                           ;Config register CONFIG1H @ 0x300001
   754                           ;	Oscillator Selection
   755                           ;	FOSC = INTOSCIO, Internal oscillator
   756                           ;	Primary Oscillator Shutdown
   757                           ;	PCLKEN = ON, Primary oscillator enabled
   758                           ;	Fail-Safe Clock Monitor
   759                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   760                           ;	Internal/External Oscillator Switchover
   761                           ;	IESO = OFF, Oscillator Switchover mode disabled
   762  300001                     	org	3145729
   763  300001  28                 	db	40
   764                           
   765                           ;Config register CONFIG2L @ 0x300002
   766                           ;	Power-up Timer Enable
   767                           ;	nPWRTEN = OFF, Power up timer disabled
   768                           ;	Brown-out Reset Enable
   769                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   770                           ;	Brown-out Reset Voltage
   771                           ;	BORV = 190, BOR set to 1.9V nominal
   772                           ;	Low-Power Brown-out Reset
   773                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   774  300002                     	org	3145730
   775  300002  5F                 	db	95
   776                           
   777                           ;Config register CONFIG2H @ 0x300003
   778                           ;	Watchdog Timer Enable bits
   779                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   780                           ;	Watchdog Timer Postscaler
   781                           ;	WDTPS = 32768, 1:32768
   782  300003                     	org	3145731
   783  300003  3C                 	db	60
   784                           
   785                           ; Padding undefined space
   786  300004                     	org	3145732
   787  300004  FF                 	db	255
   788                           
   789                           ;Config register CONFIG3H @ 0x300005
   790                           ;	CCP2 MUX bit
   791                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   792                           ;	PORTB A/D Enable bit
   793                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   794                           ;	Timer3 Clock Input MUX bit
   795                           ;	T3CMX = RC0, T3CKI function is on RC0
   796                           ;	SDO Output MUX bit
   797                           ;	SDOMX = RB3, SDO function is on RB3
   798                           ;	Master Clear Reset Pin Enable
   799                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   800  300005                     	org	3145733
   801  300005  D3                 	db	211
   802                           
   803                           ;Config register CONFIG4L @ 0x300006
   804                           ;	Stack Full/Underflow Reset
   805                           ;	STVREN = ON, Stack full/underflow will cause Reset
   806                           ;	Single-Supply ICSP Enable bit
   807                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   808                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   809                           ;	ICPRT = OFF, ICPORT disabled
   810                           ;	Extended Instruction Set Enable bit
   811                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   812                           ;	Background Debugger Enable bit
   813                           ;	DEBUG = 0x1, unprogrammed default
   814  300006                     	org	3145734
   815  300006  85                 	db	133
   816                           
   817                           ; Padding undefined space
   818  300007                     	org	3145735
   819  300007  FF                 	db	255
   820                           
   821                           ;Config register CONFIG5L @ 0x300008
   822                           ;	Block 0 Code Protect
   823                           ;	CP0 = OFF, Block 0 is not code-protected
   824                           ;	Block 1 Code Protect
   825                           ;	CP1 = OFF, Block 1 is not code-protected
   826                           ;	Block 2 Code Protect
   827                           ;	CP2 = OFF, Block 2 is not code-protected
   828                           ;	Block 3 Code Protect
   829                           ;	CP3 = OFF, Block 3 is not code-protected
   830  300008                     	org	3145736
   831  300008  0F                 	db	15
   832                           
   833                           ;Config register CONFIG5H @ 0x300009
   834                           ;	Boot Block Code Protect
   835                           ;	CPB = OFF, Boot block is not code-protected
   836                           ;	Data EEPROM Code Protect
   837                           ;	CPD = OFF, Data EEPROM is not code-protected
   838  300009                     	org	3145737
   839  300009  C0                 	db	192
   840                           
   841                           ;Config register CONFIG6L @ 0x30000A
   842                           ;	Block 0 Write Protect
   843                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   844                           ;	Block 1 Write Protect
   845                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   846                           ;	Block 2 Write Protect
   847                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   848                           ;	Block 3 Write Protect
   849                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   850  30000A                     	org	3145738
   851  30000A  0F                 	db	15
   852                           
   853                           ;Config register CONFIG6H @ 0x30000B
   854                           ;	Configuration Registers Write Protect
   855                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   856                           ;	Boot Block Write Protect
   857                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   858                           ;	Data EEPROM Write Protect
   859                           ;	WRTD = OFF, Data EEPROM is not write-protected
   860  30000B                     	org	3145739
   861  30000B  E0                 	db	224
   862                           
   863                           ;Config register CONFIG7L @ 0x30000C
   864                           ;	Block 0 Table Read Protect
   865                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   866                           ;	Block 1 Table Read Protect
   867                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   868                           ;	Block 2 Table Read Protect
   869                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   870                           ;	Block 3 Table Read Protect
   871                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   872  30000C                     	org	3145740
   873  30000C  0F                 	db	15
   874                           
   875                           ;Config register CONFIG7H @ 0x30000D
   876                           ;	Boot Block Table Read Protect
   877                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   878  30000D                     	org	3145741
   879  30000D  40                 	db	64
   880                           tosu	equ	0xFFF
   881                           tosh	equ	0xFFE
   882                           tosl	equ	0xFFD
   883                           stkptr	equ	0xFFC
   884                           pclatu	equ	0xFFB
   885                           pclath	equ	0xFFA
   886                           pcl	equ	0xFF9
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           prodh	equ	0xFF4
   892                           prodl	equ	0xFF3
   893                           indf0	equ	0xFEF
   894                           postinc0	equ	0xFEE
   895                           postdec0	equ	0xFED
   896                           preinc0	equ	0xFEC
   897                           plusw0	equ	0xFEB
   898                           fsr0h	equ	0xFEA
   899                           fsr0l	equ	0xFE9
   900                           wreg	equ	0xFE8
   901                           indf1	equ	0xFE7
   902                           postinc1	equ	0xFE6
   903                           postdec1	equ	0xFE5
   904                           preinc1	equ	0xFE4
   905                           plusw1	equ	0xFE3
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           bsr	equ	0xFE0
   909                           indf2	equ	0xFDF
   910                           postinc2	equ	0xFDE
   911                           postdec2	equ	0xFDD
   912                           preinc2	equ	0xFDC
   913                           plusw2	equ	0xFDB
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                             _state1
                             _state2
                             _state3
                             _state4
                             _state5
 ---------------------------------------------------------------------------------
 (1) _state5                                               0     0      0       0
                            _delay1S
 ---------------------------------------------------------------------------------
 (1) _state4                                               0     0      0       0
                            _delay1S
 ---------------------------------------------------------------------------------
 (1) _state3                                               0     0      0       0
                            _delay1S
 ---------------------------------------------------------------------------------
 (1) _state2                                               0     0      0       0
                            _delay1S
 ---------------------------------------------------------------------------------
 (1) _state1                                               0     0      0       0
                            _delay1S
 ---------------------------------------------------------------------------------
 (2) _delay1S                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _state1
     _delay1S
   _state2
     _delay1S
   _state3
     _delay1S
   _state4
     _delay1S
   _state5
     _delay1S

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1       2       1        2.1%
BITBIGSFRllhh       3A      0       0      24        0.0%
BITBIGSFRllhlll     21      0       0      29        0.0%
BITBIGSFRhlh        19      0       0      21        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRllhlhl      8      0       0      27        0.0%
BITBIGSFRllll        8      0       0      31        0.0%
BITBIGSFRllhlhl      5      0       0      26        0.0%
BITBIGSFRlh          2      0       0      23        0.0%
BITBIGSFRllhllh      1      0       0      28        0.0%
BITBIGSFRllhlhh      1      0       0      25        0.0%
BITBIGSFRlllh        1      0       0      30        0.0%
BITBIGSFRhll         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      32        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 03 00:02:02 2022

                     l72 011E                       l81 010A                       l57 004C  
                     l66 00AE                       l75 0114                       l84 00BC  
                     l69 00F4                       l86 00CA                       l78 00E2  
                     l87 00D0                       u10 00CA                       u11 00C6  
                     u20 006E                       u21 006A                      l800 011A  
                    l802 010C                      l810 00DA                      l804 0110  
                    l812 00DE                      l820 0058                      l806 00D2  
                    l814 0102                      l822 005C                      l808 00D6  
                    l816 0106                      l824 005E                      l770 00B0  
                    l826 006E                      l818 0048                      l780 0086  
                    l772 00CC                      l782 0088                      l774 007E  
                    l790 00E4                      l784 008A                      l776 0082  
                    l792 00E8                      l786 008C                      l778 0084  
                    l794 00EC                      l788 00AC                      l796 00F0  
                    l798 0116                      wreg 000FE8                     _LATD 000F8C  
                   i2l94 0040                     _main 0048                     _init 007E  
                   btemp 0003                     start 0044             ___param_bank 000000  
                  ?_main 0002                    ?_init 0002                    _T0CON 000FD5  
                  i2l830 001A                    i2l832 0028                    i2l834 002A  
                  i2l836 003A                    i2l828 000A                    i2l838 003E  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISD 000F95  
        __end_of_delay1S 00D2                    ttemp5 0004                    ttemp6 0007  
                  ttemp7 000B                    status 000FD8                    wtemp8 0004  
        __initialization 00F6             __end_of_main 007E             __end_of_init 00B0  
                 ??_main 0003                   ??_init 0003            __activetblptr 000000  
                 _ANSELA 000F5B                   _ANSELB 000F5C                   _ANSELD 000F5E  
                 _OSCCON 000FD3                   i2u3_40 0028                   i2u3_41 0024  
                 i2u4_40 003A                   i2u4_41 0036                   i2u5_47 0010  
       __end_of_high_isr 0044                   _cuenta 0001                ??_delay1S 0003  
                 isa$std 000001                   _state1 00E4                   _state2 0116  
                 _state3 010C                   _state4 00D2                   _state5 0102  
             __accesstop 0060  __end_of__initialization 00F8            ___rparam_used 000001  
         __pcstackCOMRAM 0002                  ?_state1 0002                  ?_state2 0002  
                ?_state3 0002                  ?_state4 0002                  ?_state5 0002  
              ?_high_isr 0002                  __Hparam 0000                  __Lparam 0000  
                _delay1S 00B0                  __pcinit 00F6                  __ramtop 0800  
                __ptext0 0048                  __ptext1 0102                  __ptext2 00D2  
                __ptext3 010C                  __ptext4 0116                  __ptext5 00E4  
                __ptext6 00B0                  __ptext7 007E               ??_high_isr 0002  
   end_of_initialization 00F8                _PORTBbits 000F81                _TRISBbits 000F93  
         __end_of_state1 00F6           __end_of_state2 0120           __end_of_state3 0116  
         __end_of_state4 00E4           __end_of_state5 010C      start_initialization 00F6  
               ??_state1 0003                 ??_state2 0003                 ??_state3 0003  
               ??_state4 0003                 ??_state5 0003              __pbssCOMRAM 0001  
              __pintcode 0008                 ?_delay1S 0002                 _RCONbits 000FD0  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
               _high_isr 0008                 isa$xinst 000000                 int$flags 0003  
             _INTCONbits 000FF2                 intlevel2 0000  
